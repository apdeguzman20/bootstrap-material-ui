//
// Navbars
// --------------------------------------------------


// Wrapper and base class
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {

  @media (min-width: @grid-float-breakpoint) {

  }
}


// Navbar heading
//
// Groups `.navbar-brand` and `.navbar-toggle` into a single component for easy
// styling of responsive aspects.

.navbar-header {

  @media (min-width: @grid-float-breakpoint) {
  }
}


// Navbar collapse (body)
//
// Group your navbar content into this for easy collapsing and expanding across
// various device sizes. By default, this content is collapsed when <768px, but
// will expand past that for a horizontal display.
//
// To start (on mobile devices) the navbar links, forms, and buttons are stacked
// vertically and include a `max-height` to overflow in case you have too much
// content for the user's viewport.

.navbar-collapse {
  border: none;

  &.in {
  }

  @media (min-width: @grid-float-breakpoint) {
  
    &.collapse {
    }

    &.in {
    }

    // Undo the collapse side padding for navbars with containers to ensure
    // alignment of right-aligned contents.
    .navbar-fixed-top &,
    .navbar-static-top &,
    .navbar-fixed-bottom & {
    }
  }
}

.navbar-fixed-top,
.navbar-fixed-bottom {
  .navbar-collapse {
    max-height: @navbar-collapse-max-height;

    @media (max-device-width: @screen-xs-min) and (orientation: landscape) {
    }
  }
}


// Both navbar header and collapse
//
// When a container is present, change the behavior of the header and collapse.

.container,
.container-fluid {
  > .navbar-header,
  > .navbar-collapse {

    @media (min-width: @grid-float-breakpoint) {

    }
  }
}


//
// Navbar alignment options
//
// Display the navbar across the entirety of the page or fixed it to the top or
// bottom of the page.

// Static top (unfixed, but 100% wide) navbar
.navbar-static-top {

  @media (min-width: @grid-float-breakpoint) {
  }
}

// Fix the top/bottom navbars when screen real estate supports it
.navbar-fixed-top,
.navbar-fixed-bottom {

  // Undo the rounded corners
  @media (min-width: @grid-float-breakpoint) {
  }
}
.navbar-fixed-top {

}
.navbar-fixed-bottom {

}


// Brand/project name

.navbar-brand {
  font-size: 20px;
  font-weight: 500;
  line-height: 16px;
  
  &:hover,
  &:focus {
  }

  > img {
  }

  @media (min-width: @grid-float-breakpoint) {
    .navbar > .container &,
    .navbar > .container-fluid & {
      margin-left: 0;
    }
  }
}


// Navbar toggle
//
// Custom button for toggling the `.navbar-collapse`, powered by the collapse
// JavaScript plugin.

.navbar-toggle {
  border: 0;
  float: left;
  height: 48px;
  margin: 8px 8px 8px 12px;
  padding: 12px;
  width: 48px;
  
  // We remove the `outline` here, but later compensate by attaching `:hover`
  // styles to `:focus`.
  &:focus {
    outline: 0;
  }

  // Bars
  .icon-bar {
    width: 100%;
  }
  .icon-bar + .icon-bar {
  }

  @media (min-width: @grid-float-breakpoint) {
  }
}


// Navbar nav links
//
// Builds on top of the `.nav` components with its own modifier class to make
// the nav the full height of the horizontal nav (above 768px).

.navbar-nav {
  margin-bottom: 10px;
  margin-top: 10px;
  
  > li > a {
    font-size: 16px;
    padding: 14px 24px;
  }

  @media (max-width: @grid-float-breakpoint-max) {

    + .navbar-nav{
      margin-top: -8px;
    }

    // Dropdowns get custom display when collapsed
    .open .dropdown-menu {
      padding: 0;
      padding-bottom: 8px;
      > li > a,
      .dropdown-header {
      }
      > li > a {
        font-size: 16px;
        padding: 14px 24px;
        &:hover,
        &:focus {
        }
      }
    }
  }

  // Uncollapse the nav
  @media (min-width: @grid-float-breakpoint) {

    > li {

      > a {
        border-radius: @border-radius-base !important;
        font-weight: 500;
        min-width: 48px;
        padding: 12px;
        text-align: center;
      }
    }
  }
}


// Navbar form
//
// Extension of the `.form-inline` with some extra flavor for optimum display in
// our navbars.

.navbar-form {
  border: none !important;
  margin-bottom: 8px;
  margin-top: 8px;
  padding-left: 24px;
  padding-right: 24px;

  .form-group {
    @media (max-width: @grid-float-breakpoint-max) {
      margin-bottom: 0;
      
      &:last-child {
      }
    }
  }

  // Undo 100% width for pull classes
  @media (min-width: @grid-float-breakpoint) {

  }
}


// Dropdown menus

// Menu position and menu carets
.navbar-nav > li > .dropdown-menu {
  border-radius: @border-radius-base !important;
  margin-top: 0;
  top: 0;
}
// Menu position and menu caret support for dropups via extra dropup class
.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {
}


// Buttons in navbars
//
// Vertically center a button within a navbar (when *not* in a form).

.navbar-btn {
  margin-bottom: 14px;
  margin-top: 14px;

  &.btn-sm {
    .navbar-vertical-align(@input-height-small);
  }
  &.btn-xs {
    .navbar-vertical-align(22);
  }
}


// Text in navbars
//
// Add a class to make any element properly align itself vertically within the navbars.

.navbar-text {
  .navbar-vertical-align(@line-height-computed);

  @media (min-width: @grid-float-breakpoint) {
  }
}


// Component alignment
//
// Repurpose the pull utilities as their own navbar utilities to avoid specificity
// issues with parents and chaining. Only do this when the navbar is uncollapsed
// though so that navbar contents properly stack and align in mobile.
//
// Declared after the navbar components to ensure more specificity on the margins.

@media (min-width: @grid-float-breakpoint) {
  .navbar-left  {  }
  .navbar-right {

    ~ .navbar-right {
    }
  }
}


// Alternate navbars
// --------------------------------------------------

// Default navbar
.navbar-default {

  .navbar-brand {
    &:hover,
    &:focus {

    }
  }

  .navbar-text {
  }

  .navbar-nav {
    > li > a {

      &:hover,
      &:focus {

      }
    }
    > .active > a {
      &,
      &:hover,
      &:focus {
      }
    }
    > .disabled > a {
      &,
      &:hover,
      &:focus {
      }
    }
  }

  .navbar-toggle {
    &:hover,
    &:focus {
    }
    .icon-bar {
    }
  }

  .navbar-collapse,
  .navbar-form {
    box-shadow: none;
  }

  // Dropdown menu items
  .navbar-nav {
    // Remove background color from open dropdown
    > .open > a {
      &,
      &:hover,
      &:focus {

      }
    }

    @media (max-width: @grid-float-breakpoint-max) {
      // Dropdowns get custom display when collapsed
      .dropdown.open {
        background-color: @navbar-default-link-active-bg;

        > a {
          background-color: transparent;
        }
      }
      .open .dropdown-menu {
        > li > a {
          &:hover,
          &:focus {

          }
        }
        > .active > a {
          &,
          &:hover,
          &:focus {

          }
        }
        > .disabled > a {
          &,
          &:hover,
          &:focus {

          }
        }
      }
    }
  }


  // Links in navbars
  //
  // Add a class to ensure links outside the navbar nav are colored correctly.

  .navbar-link {
    &:hover {
    }
  }

  .btn-link {
    &:hover,
    &:focus {
    }
    &[disabled],
    fieldset[disabled] & {
      &:hover,
      &:focus {
      }
    }
  }
}